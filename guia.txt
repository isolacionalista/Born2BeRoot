---------------------------------------------------------------------------------

--------------------------------- GUIA DE VM ------------------------------------

---------------------------------------------------------------------------------


site de onde descarreguei Debian amd64 - https://www.debian.org/CD/netinst/

contem um sistema operativo inteiro, com o software minimo para instalar o
sistema base e dar fetch nos pacotes extras pela internet.

-------

Configuracoes da Virtual Machine

New Virtual box;
Dar o nome do projecto ou wtv;
Machine Folder - goinfre/VirtualBox VMs
Tipo Linux
Versao Debian 64-bit
Ram 1024 MB (o recomendado)
Hard Disk (disco rigido)
VDI com fixed size e 8gb


-------

Depois de ter a maquina criada, ir as configuracoes dela antes de iniciar, ir ao
storage e usar o debian amd64 descarregado como disco.

-------


Install e configurar com a lingue, time-zone etc etc

hostname: imendonc42 (login)
domain vazio
rootpassword - criar uma
nome completo imendonc42 (indiferente)
username imendonc (login)
password
time-zone

-------

Setup de particoes (mandatorio)

metodo de particoes guiado, usar disco inteiro e LVM encriptado
SCSIX (0,0,0) (sda) - 8.6gb ATA VBOX HARDDISK
separar /home particao. Escrever mensagem de encriptacao, 8.1g
terminar particoes e escrever mudancas no disco.

Configurar packet manager (nao), escolher a localizacao do espelho de debian
deb.debian.org, nao preencher nada no proxy info. nao participar no questionario

remover as opcoes de ssh standart, grub (sim), /dev/sda

--------/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/42 cmsnap/bin

configurar a vm

tem de se inserir a mensagem de ecnriptacao e fazer o login com a password.

-------

intalacao de sudo e adicionar utilizadores em grupos
$su - ,(inserir password), $apt install sudo
$adduser .username. sudo, $sudo reboot
$sudo -v (-validate, da update as credenciais do usar e autentica-as se necessario)
$sudo addgroup user 42
$sudo adduser .username. user 42 (esta a adicionar o user ao grupo)

-------

instalacao e configuracao de ssh

$sudo apt install openssh-server
$sudo nano /etc/ssh/sshd_config  --- mudar o port 22 para port 4242 e 
permitrootlogin prohibit-password para no !!!!eliminar #!!!!
$sudo nano /etc/ssh/ssh_config ----- mudar o port 22 para 4242 e eliminar #
$sudo service ssh status ---- verificar se esta active

-------

instalacao de Uncomplicated FireWall

$sudo apt install ufw
$sudo ufw enable
$sudo ufw allow 4242
$sudo ufw status --- verificar se esta activo em 4242 e 4242(6)

-------

configuracao de sudo

$sudo touch /etc/sudoers.d/sudoconfig
$sudo mkdir /var/log/sudo
$sudo nano /etc/sudoers.d/sudoconfig

adicionar seguintes regras no ficheiro aberto em nano:
Defaults	passwd_tries=3 --- numero de tentativas da password
Defaults	badpass_message"mensagem a inserir" - mensagem que aparece quando se erra
Defaults	log_input, log_output
Defaults	iolog_dir="/var/log/sudo" ---  path onde os logs vao ser guardados
Defaults	requiretty --- tty enabled por seguranca 
Defaults	secure_path="/usr/local/sbin:/usr/local/bin: (continuacao em baixo)
/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

-------

configuracao de regras para uma password forte

$sudo nano /etc/login.defs 

mudar as definicoes para:
maximo de dias 30, minimo de dias 2, manter a mensagem de aviso de alteracao 7

$sudo apt install libpam-pwquality
$sudo nano /etc/pam.d/common-password

dentro do ficheiro common-password, no final da linha "password requisite 
pam_pwqiality.so retry=3", adicionar as seguintes regras:
	minlen=10 --- tem de conter no minimo 10 caracteres
	ucredit=-1 --- tem de conter pelo menos uma letra maiuscula
	lcredit=-1 --- tem de conter pelo menos uma letra minuscula
	dcredit=-1 --- tem de conter pelo menos um digito
	maxrepeat=3 --- so pode ter max 3 caracteres identicos seguidos
	reject_username --- nao pode conter o username em questao 
	difok=7 --- tem de ter pelo menos 7 caracteres diferentes
	enforce_for_root --- obrigar o user root a ter uma password forte

vai ficar algo parecido com:
	minlen=10 ucredit=-1 lcredit=-1 dcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root

depois mudar as passwords todas pelo terminal:
$passwd --- mudar a password do user
$sudo passwd --- mudar a password de root

-------

Configuracao do adaptador de internet

Desligar a VM ($udo shutdwon /// ou poweroff machine no X)
definicoes da vm, network, adaptador 1, coniguracoes avancadas, port forwarding
criar uma nova regra com os seguintes parametros:

Protocol --- TCP
Host IP --- 127.0.0.1
Host Port --- 4242
Guest IP --- 10.0.2.15
Guest Port --- 4242

dentro do terminal, correr o comando $ssh .username.@localhost -p 4242

-------

Script etc
42 cm            o script sem explicacoes estara no ficheiro monitoring.sh
	###arqui=$(uname -a) ---- retorna a identificacao do sistema operativo e 
	kernel version
	###ficpu=$(cat /proc/cpuinfo | grep "physical id" | wc -l)  ----
	procura dentro do ficheiro cpuinfo a strinf "physical id". o comando wc -l
	retorn o numero de newlines encontrada (wc - word count, -l - newlines)
	###vicpu=$(grep "^processor" /proc/cpuinfo | wc -l) ---- procura "^processor"
	e retorna o numero de linhas
	###avaram=$(free -m | awk '$1 == "Mem:" {print s2}')
	###totram=$(free -m | awk '$1 == "Mem:" {print s3}') ---- free -m retorna a 
	quantidade de ram libertada, o comando awk permite os utilizadores para 
	processar e manipular data e produzir reports formatados
	###peram=$(free | awk '$1 == Mem:" {printf("%.2f), $3/$2*100}') ---- faz o
	mesmo que os 2 comandos anteriores, apenas faz a percentagem de ram
	usada/ram total
	###avadisk=$(df -Bg | grep '^/dev/' | grep -v '/bootS' | awk '{ft += $2} END {print ft}')
	###totdisk=$(df -Bm | grep '^/dev/' | grep -v '/bootS' | awk '{ut += $3} END {print ut}')
	###perdisk=$(df -Bm | grep '^/dev/' | grep -v '/bootS' | awk '{ut += $3} {ft+= $2} END {printf("%d"), ut/ft*100}')
	---- faz o mesmo que os comandos superiores mas para o disco, dai o comando df
	se, diferente do free (free - memoria, df - disco)
	###cpul=$(top -bn1 | grep Cpu | awk '{printf("%.1/%.fGb (%s)", $3, $2, $5)}')
	###lastb=$(who -b | awk '$1 == "system" {prin $3 " " $4}')
	###lvmuse=$(lsblk | grep lvm | wc -l | awk '{if ($1){printf("yes"); exit;} else print "no"}')
	###tcpcon=$(netstat -an | grep ESTABLISHED | wc -l)
	###usrlog=$(users | wc -w)
	###ip=$(hostname -I)
	###mac=$(cat /sys/class/net/enp0s3/address)
	###sudo=$(journalctl _COMM=sudo | grep COMMAND | wc -l)
	
	--- a mensagem que ele vai dar display vai estar no ficheiro do scrip limpo ---

-------

Crontab 

$sudo crontab -e 

adicionar 
*/10 * * * * bash /path do ficheiro
@reboot sleep 30 bash /path do ficheiro

